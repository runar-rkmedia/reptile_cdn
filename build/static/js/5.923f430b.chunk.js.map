{"version":3,"sources":["components/Auction/AuctionEnded.tsx","components/widgets/InfoPopup.tsx","components/Auction/AuctionEndedAds.tsx","components/widgets/PromotionList.tsx","components/Auction/AuctionRating.tsx","components/Auction/AuctionSetStatus.tsx","../node_modules/debounce-promise/dist/index.js","components/Auction/Conversation.tsx"],"names":["PromotionForm","_super","_this","apply","this","arguments","panes","menuItem","render","__WEBPACK_IMPORTED_MODULE_2_react__","__WEBPACK_IMPORTED_MODULE_3_semantic_ui_react__","Pane","attached","style","display","justifyContent","alignItems","__WEBPACK_IMPORTED_MODULE_1_components_widgets_InfoPopup__","__WEBPACK_IMPORTED_MODULE_6__AuctionSetStatus__","ad","props","direction","__WEBPACK_IMPORTED_MODULE_7__Conversation__","conversationID","conversations","__WEBPACK_IMPORTED_MODULE_5__AuctionRating__","__extends","prototype","length","__WEBPACK_IMPORTED_MODULE_0_components_utils_RequiresLogin__","stackable","reversed","Column","width","menu","secondary","pointing","color","__WEBPACK_IMPORTED_MODULE_4__AuctionEndedAds__","__webpack_exports__","_a","children","icon","__rest","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_2_semantic_ui_react__","__assign","position","trigger","__WEBPACK_IMPORTED_MODULE_0_components_utils_Icon__","padding","inverted","__WEBPACK_IMPORTED_MODULE_1_components_widgets_PromotionList__","as","id","public_image_id","short_description","href","header","Item","key","__WEBPACK_IMPORTED_MODULE_0_components_utils_ResponsiveImage__","semanticProps","size","publicId","Content","Header","Description","PromotionList","shouldComponentUpdate","promotions","Component","__WEBPACK_IMPORTED_MODULE_0_react__","map","promotion","connectCreator","Object","__WEBPACK_IMPORTED_MODULE_1_react_redux__","base","keys","k","Number","debounce","__webpack_require__","default","min","val","max","AuctionRating","call","state","form","pristine","valid","dispatch","_s","debounced","rating","message","postReview","then","__WEBPACK_IMPORTED_MODULE_5_react_redux_form__","setSubmitted","setPristine","leading","handleSubmitRating","isFetching","getReviews","isPosting","user","users","reviews","_b","userId","userReview","find","reviewer","otherReview","otherReviewer","revieeeId","highestBidderId","reviewee","undefined","initialFormState","__WEBPACK_IMPORTED_MODULE_3_react__","className","model","onSubmit","getDispatch","setState","onUpdate","$form","initialState","validators","given_name","__WEBPACK_IMPORTED_MODULE_2_components_widgets_Rating__","onRate","change","__WEBPACK_IMPORTED_MODULE_4_semantic_ui_react__","hidden","__WEBPACK_IMPORTED_MODULE_0_components_utils_BaseField__","flexGrow","marginBottom","placeholder","typeComponent","hideErrors","controlProps","rows","autoHeight","minLength","maxLength","primary","disabled","type","__WEBPACK_IMPORTED_MODULE_1_components_utils_Icon__","active","info","__WEBPACK_IMPORTED_MODULE_7_react_redux__","review","auctionReviews","filter","auction","ownProps","__WEBPACK_IMPORTED_MODULE_6_actions_review__","statusOptions","__WEBPACK_IMPORTED_MODULE_0_api_constants__","sort","a","b","sortOrder","AuctionSetStatus","sending","setStatus","handleChange","dropdownprops","currentStatus","status","text","labeled","button","Menu","description","onClick","__WEBPACK_IMPORTED_MODULE_5_react_redux__","__WEBPACK_IMPORTED_MODULE_4_actions_ad__","_typeof","Symbol","iterator","obj","constructor","module","exports","fn","wait","options","lastCallAt","deferred","timer","pendingArgs","argsIndex","currentWait","getWait","currentTime","Date","getTime","isCold","_len","args","Array","_key","accumulate","Promise","resolve","result","concat","clearTimeout","promise","reject","defer","push","setTimeout","thisDeferred","bind","_ret","v","results","messageMaxLength","refreshRate","Conversation","validForm","feedContainer","handleSubmitMessage","msg","target","newMessageInConversation","value","__WEBPACK_IMPORTED_MODULE_3_react_redux_form__","reset","refreshConstantly","refresh","conversation","getConversation","updated_at","componentWillUnmount","componentDidUpdate","scrollTop","scrollHeight","loaded","inline","currentUser","ref","d","maxHeight","overflow","Group","flexDirection","message_html","date","postedBy","thisUser","Avatar","src","picture_url","Author","Metadata","__WEBPACK_IMPORTED_MODULE_5_utils_date__","Text","dangerouslySetInnerHTML","__html","onKeyPress","event","charCode","shiftKey","preventDefault","stopPropagation","currentTarget","content","loading","_conversation","conversationId","readAt","__WEBPACK_IMPORTED_MODULE_6_actions_conversation__"],"mappings":"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","file":"static/js/5.923f430b.chunk.js","sourcesContent":["import { IAd } from 'api/interfaces'\nimport RequiresLogin from 'components/utils/RequiresLogin'\nimport InfoPopup from 'components/widgets/InfoPopup'\nimport * as React from 'react'\nimport { Grid, Header, Segment, Tab } from 'semantic-ui-react'\nimport AuctionEndedAds from './AuctionEndedAds'\nimport AuctionRating from './AuctionRating'\nimport AuctionSetStatus from './AuctionSetStatus'\nimport Conversation from './Conversation'\n\ninterface IProps {\n  ad: IAd,\n}\n\nclass PromotionForm extends React.Component<IProps> {\n  public panes = [\n    {\n      menuItem: 'Samtale', render: () => (\n        <Tab.Pane attached={false}>\n          <Header\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'baseline',\n            }}\n          >\n            <div>Samtale</div>\n            <div>\n              <InfoPopup>\n                <p>\n                  Du kan forandre statusen for å holde kontroll på dine kjøp og salg.\n                            </p>\n                <p>\n                  Dette forandres for både selger og kjøper.\n                            </p>\n              </InfoPopup>\n              <AuctionSetStatus ad={this.props.ad} direction=\"left\" />\n            </div>\n          </Header>\n          <Conversation conversationID={this.props.ad.conversations![0]} />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Tilbakemelding', render: () => (\n        <Tab.Pane attached={false}>\n          <Header>Tilbakemelding</Header>\n          <AuctionRating ad={this.props.ad} />\n        </Tab.Pane>\n      ),\n    },\n  ]\n\n  public render() {\n    const { ad } = this.props\n    const { conversations } = ad\n    const conversationID = conversations && conversations.length && conversations[0]\n    if (!conversationID) {\n      return null\n    }\n    return (\n      <RequiresLogin>\n        <Grid stackable={true} reversed=\"mobile\">\n          <Grid.Column width={10}>\n            <Segment>\n              <Tab\n                menu={{\n                  secondary: true,\n                  pointing: true,\n                  color: 'blue',\n                }}\n                panes={this.panes}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={6}>\n            <AuctionEndedAds />\n          </Grid.Column>\n        </Grid>\n      </RequiresLogin>\n    )\n  }\n}\n\nexport default PromotionForm\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auction/AuctionEnded.tsx","import Icon from 'components/utils/Icon'\nimport * as React from 'react'\nimport { Popup, PopupProps, Segment, SemanticCOLORS } from 'semantic-ui-react'\n\ninterface IProps extends PopupProps {\n  color?: SemanticCOLORS\n  icon?: any\n}\n\nexport default ({ children, color, icon, ...props }: IProps) => (\n  <Popup\n    position=\"top center\"\n    trigger={(\n      <Icon color={color || 'blue'} icon={icon || 'info'} />\n    )}\n    style={{\n      padding: 0,\n    }}\n    {...props}\n  >\n    <Segment color=\"blue\" inverted={true}>\n      {children}\n    </Segment>\n  </Popup>\n\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/widgets/InfoPopup.tsx","import ResponsiveImage from 'components/utils/ResponsiveImage'\nimport PromotionList from 'components/widgets/PromotionList'\nimport { IPromotion } from 'interfaces'\nimport * as React from 'react'\nimport { List, Segment } from 'semantic-ui-react'\n\nexport default () => (\n  <Segment inverted={true}>\n    <List inverted={true}>\n      <PromotionList\n        as={({ id, public_image_id, short_description, href, header }: IPromotion) => (\n          <List.Item key={id}>\n            <ResponsiveImage semanticProps={{ size: 'tiny', href }} publicId={public_image_id} />\n            <List.Content>\n              <List.Header as=\"a\" href={href}>{header}</List.Header>\n              <List.Description>{short_description}</List.Description>\n            </List.Content>\n          </List.Item>\n        )}\n      />\n    </List>\n  </Segment>\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auction/AuctionEndedAds.tsx","import * as React from 'react'\ninterface IProps {\n  as: any\n}\n\nclass PromotionList extends React.Component<IConnectProps> {\n  public shouldComponentUpdate() {\n    return false\n  }\n  public render() {\n    const {promotions} = this.props\n    const Component =  this.props.as\n    return (\n      <>\n        {promotions.map((promotion) => (<Component key={promotion.id} {...promotion} />))}\n      </>\n    )\n  }\n}\n\nimport { connect } from 'react-redux'\nimport { IStoreState } from 'store'\nconst connectCreator = connect(\n  ({ base }: IStoreState) => {\n    return {\n      promotions: Object.keys(base.promotions).map((k) => base.promotions[Number(k)]),\n    }\n  },\n)\n\ntype IConnectProps = typeof connectCreator.allProps & IProps\nexport default connectCreator(PromotionList)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/widgets/PromotionList.tsx","import { IAd } from 'api/interfaces'\nimport BaseField from 'components/utils/BaseField'\nimport Icon, { Loading } from 'components/utils/Icon'\nimport Rating from 'components/widgets/Rating'\nimport * as React from 'react'\nimport { Button, Divider, Message, TextArea } from 'semantic-ui-react'\nconst debounce = require('lodash-es/debounce').default\nimport { actions, LocalForm } from 'react-redux-form'\n\ninterface IProps {\n  ad: IAd,\n}\n\ninterface IState {\n  form: { pristine: boolean, valid: boolean }\n  dispatch: any\n}\n\ninterface IForm {\n  message: string\n  rating: number\n}\n\nconst messageMaxLength = 300\nconst min = (val: number) => !!val && val > 0\nconst max = (val: number) => !!val && val > 0\n\nclass AuctionRating extends React.Component<IConnectProps, IState> {\n  public state = {\n    form: { pristine: true, valid: false },\n    dispatch: (_s: any) => null,\n  }\n  public debounced = debounce(\n    (rating: number, message: string) => {\n      return this.props.postReview(rating, message).then(\n        () => {\n          this.state.dispatch(actions.setSubmitted('review', true))\n          this.state.dispatch(actions.setPristine('review'))\n        },\n      )\n    },\n    5000,\n    { leading: true },\n  )\n\n  constructor(props: IConnectProps) {\n    super(props)\n    if (!this.props.isFetching) {\n      this.props.getReviews()\n    }\n  }\n  public handleSubmitRating = ({ message, rating }: IForm) => {\n    this.debounced(rating, message)\n  }\n\n  public render() {\n    const { isFetching, isPosting, user, users, ad, reviews } = this.props\n    const { pristine, valid } = this.state.form\n    const userId = user && user.id\n    const userReview = reviews.find(({ reviewer }) => reviewer === userId)\n    const otherReview = reviews.find(({ reviewer }) => reviewer !== userId)\n    const otherReviewer = otherReview && users && users[otherReview.reviewer]\n\n    const revieeeId = userId === ad.user ? ad.highestBidderId : ad.user\n    const reviewee = revieeeId !== undefined && users[revieeeId]\n    const initialFormState: IForm = {\n      message: '',\n      rating: 0,\n      ...userReview && { message: userReview.message, rating: userReview.rating },\n    }\n    return (\n      <>\n        <LocalForm\n          className=\"ui form\"\n          model=\"review\"\n          onSubmit={this.handleSubmitRating}\n          getDispatch={(dispatch) => this.setState({ dispatch })}\n          onUpdate={({ $form }) => this.setState({ form: $form })}\n          initialState={initialFormState}\n          validators={{\n            // Field-level validators\n            rating: { min, max },\n          }}\n        >\n          <p>\n            Her kan du gi en offentlig tilbakemelding på dette kjøpet.\n            Dette hjelper andre med å opprettholde seriøsiteten hos selgere og kjøpere.</p>\n          <p>\n            Din rating av {reviewee && reviewee.given_name}:\n            <Rating\n              rating={initialFormState.rating}\n              onRate={(rating) => this.state.dispatch(actions.change('review.rating', rating))}\n            />\n          </p>\n          <Divider hidden={true} />\n          < div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <BaseField\n              style={{ flexGrow: 1, marginBottom: 0 }}\n              placeholder=\"Skrive din beskjed her.\"\n              typeComponent={TextArea}\n              hideErrors={true}\n              controlProps={{\n                rows: 1,\n                autoHeight: true,\n              }}\n              model={'review.message'}\n              minLength={1}\n              maxLength={messageMaxLength}\n            />\n            <Button\n              icon={true}\n              primary={true}\n              disabled={isFetching || !valid || isPosting}\n              type=\"submit\"\n            >\n              {(isFetching || isPosting) ? (\n                <Loading active={true} />\n              ) : (\n                  <Icon icon=\"user\" />\n                )}\n              Legg inn anmeldelse\n            </Button>\n          </div>\n        </LocalForm>\n        {userReview && pristine && (\n          <Message info={true}>\n            <Message.Header>\n              Takk for din tilbakemelding.\n            </Message.Header>\n            <p>Om du ønsker kan du endre den.</p>\n          </Message>\n        )}\n        {otherReview && (\n          <Message color=\"green\">\n            <Message.Header>\n              Her er det {otherReviewer && otherReviewer.given_name} har å si om deg.\n            </Message.Header>\n            <Rating rating={otherReview.rating} />\n            <p>{otherReview.message}</p>\n          </Message>\n        )}\n      </ >\n    )\n  }\n}\n\nimport { getReviewsForAuction, postReview } from 'actions/review'\nimport { connect, Dispatch } from 'react-redux'\nimport { IStoreState } from 'store'\nconst connectCreator = connect(\n  ({ user, users, review }: IStoreState, { ad }: IProps) => {\n    const auctionReviews = Object.keys(review.reviews).map(\n      (k) => review.reviews[Number(k)],\n    ).filter(\n      ({ auction }) => auction === ad.id,\n    )\n    return {\n      isFetching: review.isFetching,\n      isPosting: review.isPosting,\n      reviews: auctionReviews,\n      user: user.user,\n      users,\n    }\n  },\n  (dispatch: Dispatch<{}>, ownProps: IProps) => {\n    return {\n      postReview: (rating: number, message: string) => dispatch(postReview(ownProps.ad.id, rating, message)),\r\n      getReviews: () => dispatch(getReviewsForAuction(ownProps.ad.id)),\n    }\n  },\n)\ntype IConnectProps = typeof connectCreator.allProps & IProps\nexport default connectCreator(AuctionRating)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auction/AuctionRating.tsx","import { auctionStatusInfo, IAuctionStatus } from 'api/constants'\nimport { IAd } from 'api/interfaces'\nimport Icon, { Loading } from 'components/utils/Icon'\nimport * as React from 'react'\nimport { Dropdown, DropdownProps } from 'semantic-ui-react'\nconst debounce = require('debounce-promise')\n\ninterface IProps extends DropdownProps {\n  ad: IAd,\n}\n\ninterface IState {\n  sending: boolean\n}\n\nconst statusOptions = Object.keys(IAuctionStatus)\n  .map(\n    (key) => {\n      return { key, ...auctionStatusInfo(IAuctionStatus[key]) }\n    },\n).sort(\n  (a, b) => a.sortOrder - b.sortOrder,\n)\n\nclass AuctionSetStatus extends React.Component<IConnectProps, IState> {\n  public state = {\n    sending: false,\n  }\n\n  public debounced = debounce(\n    (key: IAuctionStatus) => {\n      return this.props.setStatus(key)\n    },\n    2000,\n    { leading: true },\n  )\n\n  public handleChange = (key: IAuctionStatus) => {\n    this.setState({ sending: true })\n    this.debounced(key)\n      .then(() => this.setState({ sending: false }))\n  }\n\n  public render() {\n    const { ad, setStatus: _s, ...dropdownprops } = this.props\n    const currentStatus = auctionStatusInfo(IAuctionStatus[ad.status])\n    return (\n      <>\n        <Loading active={this.state.sending}/>\n        <Dropdown\n          text={`Status: ${currentStatus.text}`}\n          labeled={true}\n          button={true}\n          {...dropdownprops}\n        >\n          <Dropdown.Menu>\n            {statusOptions.map(\n              ({ key, description, icon, color }) => (\n                <Dropdown.Item\n                  key={key}\n                  disabled={key === IAuctionStatus.active}\n                  onClick={() => this.handleChange(IAuctionStatus[key])}\n                >\n                  <div>\n                    <Icon color={color} icon={icon} />\n                    {description}\n                  </div>\n                </Dropdown.Item>\n              ),\n            )}\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    )\n  }\n}\n\nimport { setStatus } from 'actions/ad'\nimport { connect, Dispatch } from 'react-redux'\nconst connectCreator = connect(\n  null,\n  (dispatch: Dispatch<{}>, ownProps: IProps) => {\n    return {\n      setStatus: (status: IAuctionStatus) => {\n        return dispatch(setStatus(ownProps.ad.id, status))\n      },\n    }\n  },\n)\ntype IConnectProps = typeof connectCreator.allProps & IProps\nexport default connectCreator(AuctionSetStatus)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auction/AuctionSetStatus.tsx","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* global setTimeout, clearTimeout */\n\nmodule.exports = function debounce(fn) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var lastCallAt = void 0;\n  var deferred = void 0;\n  var timer = void 0;\n  var pendingArgs = [];\n  return function debounced() {\n    var currentWait = getWait(wait);\n    var currentTime = new Date().getTime();\n\n    var isCold = !lastCallAt || currentTime - lastCallAt > currentWait;\n\n    lastCallAt = currentTime;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (isCold && options.leading) {\n      return options.accumulate ? Promise.resolve(fn.call(this, [args])).then(function (result) {\n        return result[0];\n      }) : Promise.resolve(fn.call.apply(fn, [this].concat(args)));\n    }\n\n    if (deferred) {\n      clearTimeout(timer);\n    } else {\n      deferred = defer();\n    }\n\n    pendingArgs.push(args);\n    timer = setTimeout(flush.bind(this), currentWait);\n\n    if (options.accumulate) {\n      var _ret = function () {\n        var argsIndex = pendingArgs.length - 1;\n        return {\n          v: deferred.promise.then(function (results) {\n            return results[argsIndex];\n          })\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return deferred.promise;\n  };\n\n  function flush() {\n    var thisDeferred = deferred;\n    clearTimeout(timer);\n\n    Promise.resolve(options.accumulate ? fn.call(this, pendingArgs) : fn.apply(this, pendingArgs[pendingArgs.length - 1])).then(thisDeferred.resolve, thisDeferred.reject);\n\n    pendingArgs = [];\n    deferred = null;\n  }\n};\n\nfunction getWait(wait) {\n  return typeof wait === 'function' ? wait() : wait;\n}\n\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debounce-promise/dist/index.js\n// module id = 1259\n// module chunks = 5","import BaseField from 'components/utils/BaseField'\nimport Icon from 'components/utils/Icon'\nimport * as React from 'react'\nimport { actions, LocalForm } from 'react-redux-form'\nimport { Button, Comment, Loader, Segment, TextArea } from 'semantic-ui-react'\nimport { prettyDate } from 'utils/date'\n\ninterface IProps {\n  conversationID: number\n}\n\ninterface IState {\n  validForm: boolean\n  dispatch: any\n}\n\nconst messageMaxLength = Number(process.env.REACT_APP_MESSAGE_MAXLENGTH) || 100\nconst refreshRate = Number(process.env.REACT_APP_MESSAGE_REFRESH_RATE) || 20000\n\nclass Conversation extends React.Component<IConnectProps, IState> {\n  public state = {\n    validForm: false,\n    dispatch: (_s: any) => null,\n  }\n  public feedContainer: any = null\n  public handleSubmitMessage = ({ msg, target }: any) => {\n    const { dispatch, validForm } = this.state\n    if (!validForm) {\n      return\n    }\n    return this.props.newMessageInConversation(\n      this.props.conversationID,\n      msg,\n    ).then(\n      (result) => {\n        if (result && dispatch) {\n          if (target) {\n            target.value = ''\n          }\n          dispatch(actions.reset('conversation'))\n        }\n      },\n    )\n  }\n  constructor(props: IConnectProps) {\n    super(props)\n    this.refresh()\n  }\n  public refreshConstantly = () => setTimeout( this.refresh, refreshRate )\n  public refresh = () => {\n    const { isFetching, conversation: conversations } = this.props\n    if (!isFetching) {\n      const {conversationID} = this.props\n      const conversation = conversations[conversationID]\n      this.props.getConversation(this.props.conversationID, conversation && conversation.updated_at)\n        .then(this.refreshConstantly)\n    } else {\n      this.refreshConstantly()\n    }\n\n  }\n  public componentWillUnmount() {\n    this.refresh = () => null\n  }\n  public componentDidUpdate() {\n    if (!this.feedContainer) {\n      return\n    }\n    this.feedContainer.scrollTop = this.feedContainer.scrollHeight\n  }\n  public render() {\n    const { users, message, loaded, isPosting, conversationID, user } = this.props\n    if (!user.user) {\n      return null\n    }\n    if (!loaded) {\n      return (\n        <Loader inline={true} active={true}>Henter samtale...</Loader>\n      )\n    }\n    const currentUser = user.user\n    return (\n      <>\n        <div\n          ref={(d: any) => this.feedContainer = d}\n          style={{\n            maxHeight: '60vh',\n            overflow: 'auto',\n          }}\n        >\n          <Segment inverted={false}>\n            <Comment.Group\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              {message.filter(\n                ({ conversation: cId }) => cId === conversationID,\n              ).map(\n                ({ message_html: msg, date, id, user: postedBy }) => {\n                  const isCurrentUser = currentUser.id === postedBy\n                  const thisUser = isCurrentUser ? currentUser :  users[postedBy]\n                  if (!thisUser) {\n                    return null\n                  }\n                  return (\n                    <Comment key={id}>\n                      <Comment.Avatar\n                        src={thisUser.picture_url}\n                      />\n                      <Comment.Content>\n                        <Comment.Author as=\"a\">{thisUser.given_name}</Comment.Author>\n                        <Comment.Metadata>\n                          <div>{prettyDate(date)}</div>\n                        </Comment.Metadata>\n                        <Comment.Text>\n                          <div dangerouslySetInnerHTML={{ __html: msg }} />\n                        </Comment.Text>\n                      </Comment.Content>\n                    </Comment>\n                  )\n                },\n              )}\n            </Comment.Group>\n          </Segment>\n        </div>\n        <Segment\n          attached={true}\n        >\n          <LocalForm\n            className=\"ui form\"\n            model=\"conversation\"\n            onSubmit={this.handleSubmitMessage}\n            getDispatch={(dispatch) => this.setState({ dispatch })}\n            onUpdate={({ $form }) => this.setState({ validForm: $form.valid })}\n            initialState={{ msg: '' }}\n          >\n            < div\n              style={{\n                display: 'flex',\n              }}\n            >\n              <BaseField\n                style={{ flexGrow: 1, marginBottom: 0 }}\n                placeholder=\"Skrive din beskjed her.\"\n                typeComponent={TextArea}\n                hideErrors={true}\n                controlProps={{\n                  rows: 1,\n                  autoHeight: true,\n                  onKeyPress: (event: React.KeyboardEvent<any>) => {\n                    if (event.charCode === 13 && !event.shiftKey) {\n                      event.preventDefault()\n                      event.stopPropagation()\n                      this.handleSubmitMessage({ msg: event.currentTarget.value, target: event.currentTarget })\n                    }\n                  },\n                }}\n                model={'conversation.msg'}\n                minLength={1}\n                maxLength={messageMaxLength}\n              />\n              <Button\n                icon={<Icon icon=\"edit\"/>}\n                content=\"Send\"\n                loading={isPosting}\n                primary={true}\n                disabled={!this.state.validForm}\n                type=\"submit\"\n              />\n            </div>\n          </LocalForm>\n        </Segment>\n\n      </ >\n    )\n  }\n}\nimport { getConversation, newMessageInConversation } from 'actions/conversation'\nimport { IMessageFull } from 'api/interfaces'\nimport { connect, Dispatch } from 'react-redux'\nimport { IStoreState } from 'store'\nconst connectCreator = connect(\n  ({ users, user, conversation: _conversation }: IStoreState) => {\n    const { isFetching, conversation, message, isPosting, loaded } = _conversation\n    return {\n      user,\n      isFetching,\n      loaded,\n      isPosting,\n      conversation,\n      users,\n      message: Object.keys(message).map((k) => message[k] as IMessageFull),\n    }\n  },\n  (dispatch: Dispatch<{}>) => {\n    return {\n      getConversation: (conversationId: number, readAt?: Date) =>\n        dispatch(getConversation(conversationId, readAt)),\n      newMessageInConversation: (conversationId: number, message: string) =>\n        dispatch(newMessageInConversation(conversationId, message)),\n    }\n  },\n)\n\ntype IConnectProps = typeof connectCreator.allProps & IProps\nexport default connectCreator(Conversation)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Auction/Conversation.tsx"],"sourceRoot":""}